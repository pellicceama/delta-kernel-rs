name: build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: format
        run: cargo fmt -- --check
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          target: wasm32-unknown-emscripten
          override: true
      #- uses: Swatinem/rust-cache@v2
      - name: build and lint with clippy
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          wasm-pack build --target web --package delta_kernel_ffi --release

      - uses: actions/upload-artifact@v2
        with:
          name: my_artifacts
          path: |
            target

      - name: list stuff
        run: tree .
      - name: lint without default features
        run: cargo clippy --no-default-features -- -D warnings
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: test
        run: cargo test --verbose --all-features
  ffi_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: test
        run: pushd ffi && cargo b --features default-engine,sync-engine && make test && popd
